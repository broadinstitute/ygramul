// Initialize source indices
MATCH (n) SET n.i_source = toInteger( rand() * 1024 );

// Initialize sink indices
MATCH (n) SET n.i_sink = toInteger( rand() * 1024 );

// Ensure that source and sink indices are different
MATCH (n) WHERE n.i_source = n.i_sink SET n.i_sink = toInteger( rand() * 1024 );

// Initialize embeddings
MATCH (n)
CALL {
    WITH n
    SET n.vector =
        [i IN range(0, 1023) |
           CASE
             WHEN i = n.i_source  THEN  1.0
             WHEN i = n.i_sink THEN -1.0
             ELSE 0.0
           END
        ]
} IN TRANSACTIONS;

// Iterate embeddings
:auto                       // needed only in Neo4j Browser
MATCH (n)                   // choose the nodes you want to update
CALL {
  WITH n
  UNWIND range(0,1023) AS i               // 1 row per index
  WITH n, i,
       CASE
         WHEN i = n.i_source THEN  1.0
         WHEN i = n.i_sink   THEN -1.0
         ELSE null
       END AS fixed
  OPTIONAL MATCH (n)-[e]-(m)
  WHERE fixed IS NULL                    // only if we still need a value
    AND e.weight IS NOT NULL
    AND m.vector IS NOT NULL
  WITH n, i, fixed,
       sum(e.weight * m.vector[i]) AS num,
       sum(e.weight)                AS den
  WITH n, i,
       CASE
         WHEN fixed IS NOT NULL THEN fixed
         WHEN den   = 0          THEN 0.0     // no weighted info â†’ 0
         ELSE num / den
       END AS value
  ORDER BY i
  WITH n, collect(value) AS vec
  SET n.vector_new = vec
} IN TRANSACTIONS;
